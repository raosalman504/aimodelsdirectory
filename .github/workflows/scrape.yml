name: Scrape AI Models

on:
  schedule:
    - cron: '0 */12 * * *'  # Run every 12 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip list  # List installed packages for debugging

    - name: Check directory structure
      run: |
        pwd
        ls -la
        echo "Current directory contents:"
        find . -type f -name "*.py" -o -name "*.json"

    - name: Create data directory if not exists
      run: |
        mkdir -p data
        ls -la data

    - name: Debug Python imports
      run: |
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        echo "Checking for scrapers module:"
        python -c "import scrapers; print('Scrapers module found')" || echo "Scrapers module not found"

    - name: Run scraper with debug output
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        python -c "
        import sys
        import os
        print('Current working directory:', os.getcwd())
        print('Python path:', sys.path)
        print('Directory contents:', os.listdir())
        from scrapers.ai_models_scraper import run_spider
        run_spider()
        "

    - name: Check scraper output
      run: |
        echo "Checking models.json:"
        if [ -f "models.json" ]; then
          echo "models.json exists"
          ls -l models.json
          echo "First 100 lines of models.json:"
          head -n 100 models.json
        else
          echo "models.json not found"
          exit 1
        fi

    - name: Configure Git
      if: success()
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

    - name: Commit and push if changes
      if: success()
      run: |
        git add models.json
        timestamp=$(date -u)
        git commit -m "Update models: ${timestamp}" || echo "No changes to commit"
        git push || echo "No changes to push"
